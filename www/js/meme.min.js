document.addEventListener("deviceready",onDeviceReady,!1);var muted=!0,comment_posted=!1;let noku=new Noku,storage=window.localStorage;var cb;const onDeviceReady=()=>{console.log(`Running cordova-${cordova.platformId}@${cordova.version}`),noku.init(),noku.setCredentials(storage.getItem("auth_token"),storage.getItem("uid")),$(".btn").click(e=>{handleClick(e)}),getValue("em-measure"),noku.testToken(handleTokenCheck)},handleTokenCheck=(e,t)=>{let n;try{n=JSON.parse(e.data)}catch(e){(n={}).valid=!1}n.valid?setup():redirect("signin.html")},redirect=e=>{$("body").fadeOut(100,()=>{window.location.href=e})};var em;const getValue=e=>{let t=document.getElementById(e);return t.style.height="1em",em=t.offsetHeight},toggleMute=e=>{muted?($(`${e} .meme-video`).prop("muted",!1),$(`${e} .mute-control`).css("background-image",'url("../www/img/audio_on.png")'),muted=!1):($(`${e} .meme-video`).prop("muted",!0),$(`${e} .mute-control`).css("background-image",'url("../www/img/audio_off.png")'),muted=!0)},handleClick=e=>{let t=$(e.target),n=t.data("command"),m=t.closest(".swiper-slide");if("mute"===n&&toggleMute(),"like"===n&&like(m,noku),"dislike"===n&&dislike(m,noku),"profile"===n&&profile(),"submissions"===n&&redirect("submissions.html"),"dank"===n&&redirect("index.html"),"menu-close"===n&&exitMenu(),"menu"===n&&enterMenu(),"comment"===n){let e=$(".post-comment");e.show(),e.data("replyTo",-1),e.data("meme",m.data("memeid")),comment_posted=!1}if("postcomment"===n){if(comment_posted)return;comment_posted=!0;let e=$(".post-comment"),t=e.data("replyTo"),n=e.data("meme"),m=$(".content").val();noku.postComment(n,m,t,(e,t)=>{let n;try{n=JSON.parse(e.data)}catch(t){(n={}).valid=!1,alert(JSON.stringify(e))}create_posted_comment({id:n.data.id,likes:0,dislikes:0,content:m},0,null,$(".comments"))}),e.hide()}"viewprofile"===n&&viewprofile(t.data("id"))},viewprofile=e=>{storage.setItem("view.id",e),redirect("profile.html")},profile=()=>{storage.setItem("view.id",noku.uid),redirect("profile.html")},enterMenu=()=>{$("#sidemenu").css({display:"block"}).addClass("animated slideInRight"),$("#overlay").fadeIn(),$("#menu-close").removeClass("hide")},exitMenu=()=>{let e=$("#sidemenu");e.addClass("animated slideOutRight"),e.css({display:"none"}),$("#overlay").fadeOut(),$("#menu-close").addClass("hide")},setup=()=>{cb=new ClipboardJS(".meme-share"),$("body").fadeIn(100,()=>{});let e=getMemeID();noku.getMemeData(e,(e,t)=>{if(!t)return;let n;try{!0===(n=JSON.parse(e.data)).error?(console.log(n.data),n=null):n=n.data}catch(t){console.log(t),console.log(e),n=null}console.log(n),createMeme(".meme-content",n),loadComments(n)})},loadComments=async e=>{let t=e.id,n=$(".comments");n.html(""),noku.getCommentsByID(t,(e,t)=>{if(!t)return;let m;try{m=JSON.parse(e.data).data}catch(t){console.log(t),console.log(e),alert(JSON.stringify(e)),m=[]}console.log(m);var d=[];for(let e in m)-1===m[e].replyTo&&d.push(m[e]);for(let e in m)-1!==m[e].replyTo&&d.push(m[e]);m=d,d=null;for(let e in m){let t=m[e];if(-1===t.replyTo)t.author===noku.uid?create_posted_comment(t,0,null,n):create_comment(t,0,null,n);else{let e=getCommentByID(m,t.replyTo),n=$(`#comment-${t.replyTo} .comment-replies`),d=$(`#comment-${t.replyTo} .comment-head`);t.author===noku.uid?create_posted_comment(t,d.data("layer")+1,e,n):create_comment(t,d.data("layer")+1,e,n)}}})},create_comment=(e,t,n,m)=>{let d=e.liked,a=e.disliked,o=`\n        <div class="comment${null==n?" comment-root":""}" id="comment-${e.id}">\n            <div class="comment-content">\n                <div class="comment-head" data-layer="${t}">\n                    <div class="float-left user-data">\n                    </div>\n                    <div class="float-right extra">\n                    </div>\n                </div>\n                <div class="comment-body">${e.content}</div>\n                <div class="comment-vote">\n                    <div class="float-left">\n                        <div class="comment-like-count" id="comment-count-${e.id}">${e.likes-e.dislikes}</div>\n                        <div class="comment-like btn" data-comment="${e.id}" id="comment-like-${e.id}"></div>\n                        <div class="comment-dislike btn" data-comment="${e.id}" id="comment-dislike-${e.id}></div>\n                    </div>\n                    <div class="float-right">\n                        <div class="comment-reply btn" data-comment"${e.id}"></div>\n                    </div>\n                </div>\n                <div class="comment-overlay"></div>\n            </div>\n            <div class="comment-replies"></div>\n        </div>\n    `;m.prepend(o),d&&($(`#comment-${e.id} .comment-like`).removeClass("comment-give"),$(`#comment-${e.id} .comment-like`).addClass("comment-given")),a&&($(`#comment-${e.id} .comment-dislike`).removeClass("comment-take"),$(`#comment-${e.id} .comment-dislike`).addClass("comment-taken")),$(`#comment-${e.id} .comment-like`).click(t=>{likeComment(e.id,noku)}),$(`#comment-${e.id} .comment-dislike`).click(t=>{dislikeComment(e.id,noku)}),noku.getUserData(e.author,t=>{let m=noku.getCDNUrl();n&&$(`#comment-${e.id} .extra`).html(`\n                    <div class="comment-reply-to">Reply To</div>\n                    <div class="comment-jump btn" data-comment="${n.id}"></div>\n                    `),$(`#comment-${e.id} .user-data`).html(`\n                <div class="comment-pfp"><img class="pfp-image" src="${m}${t.pfp}"/></div>\n                <div class="comment-user" style="color:#${t.color};">${t.username}</div>\n                `),$(`#comment-${e.id} .comment-overlay`).each(()=>{$(this).fadeOut(0)}),$(`#comment-${e.id} .comment-head`).each(()=>{let e=$(this),t=2*e.data("layer")+1,n=t+1;e.css("padding-left",`${2*e.data("layer")}em`),e.css("width",`calc(100% - ${2*e.data("layer")}em)`);let m=e.parent().children(".comment-body");m.css("padding-left",`${t}em`),m.css("width",`calc(100% - ${n}em)`);let d=e.parent().children(".comment-vote");d.css("padding-left",`${t}em`),d.css("width",`calc(100% - ${t}em)`)})})},create_posted_comment=(e,t,n,m)=>{let d=`\n        <div class="comment${null==n?" comment-root":""}" id="comment-${e.id}">\n            <div class="comment-content">\n                <div class="comment-head" data-layer="${t}">\n                    <div class="float-left user-data">\n                        <div class="comment-pfp"><img class="pfp-image" src="${noku.getCDNUrl()}${noku.userdat.pfp}" alt=""/></div>\n                        <div class="comment-user" style="color:#${noku.userdat.color};">${noku.userdat.username}</div>\n                    </div>\n                    <div class="float-right extra">${null!=n?`<div class="comment-reply-to">Reply To</div><div class="comment-jump btn" data-comment="${n.id}"></div>`:""}\n                    </div>\n                </div>\n                <div class="comment-body">${e.content}</div>\n                <div class="comment-vote">\n                    <div class="float-left">\n                        <div class="comment-like-count">${e.likes-e.dislikes}</div>\n                        <div class="comment-like btn" data-comment="${e.id}"></div>\n                        <div class="comment-dislike btn" data-comment="${e.id}"></div>\n                    </div>\n                    <div class="float-right">\n                        <div class="comment-reply btn" data-comment="${e.id}"></div>\n                    </div>\n                </div>\n                <div class="comment-overlay"></div>\n            </div>\n            <div class="comment-replies"></div>\n        </div>\n    `;m.prepend(d),$(`#comment-${e.id} .comment-overlay`).each(()=>{$(this).fadeOut(0)}),$(`#comment-${e.id} .comment-head`).each(()=>{let e=$(this),t=2*e.data("layer")+1,n=t+1;e.css("padding-left",`${2*e.data("layer")}em`),e.css("width",`calc(100% - ${2*e.data("layer")}em)`);let m=e.parent().children(".comment-body");m.css("padding-left",`${t}em`),m.css("width",`calc(100% - ${n}em)`);let d=e.parent().children(".comment-vote");d.css("padding-left",t+"em"),d.css("width",`calc(100% - ${t}em)`)}),$(`#comment-${e.id} .comment-jump`).click(()=>{let e=$(this).data("comment"),t=$(`#comment-${e}`),n=$($(`#comment-${e} .comment-overlay`)[0]),m=$("body, html");m.animate({scrollTop:t.position().top}),m.promise().done(()=>{n.fadeIn(200).fadeOut(200).fadeIn(200).fadeOut(200).fadeIn(200).fadeOut(200)})})},getCommentByID=(e,t)=>{for(let n in e)if(e[n].id===t)return e[n];return null},createNullMeme=e=>{$(e).append('\n            <div class="swiper-slide meme-container" id="NULLMEME" data-memeid="NULLMEME">\n                <div class="meme-op">\n                    <div class="float-left">\n                        <div class="op-pfp"></div>\n                        <div class="op-username">noku Team</div>\n                    </div>\n                    <div class="float-right">\n                        <div class="btn btn-black mr-2 my-auto" data-command="none">No Touch!</div>\n                    </div>\n                </div>\n                <div class="meme-body swiper-zoom-container">\n                    <div class="container p-6">\n                        <h1>End of the line pal</h1>\n                        <p>Unfortunately you have reached the end of the meme stream, come back later.</p>\n                    </div>\n                </div>\n                <div class="meme-footer">\n                    <div class="float-left">\n                        <div class="meme-like-count"></div>\n                        <div class="meme-take btn ml-1" data-command="none"></div>\n                        <div class="meme-take btn" data-command="none"></div>\n                    </div>\n                    <div class="float-right">\n                        <div class="meme-take btn mr-1" data-command="none"></div>\n                        <div class="meme-take btn mr-2" data-command="none"></div>\n                        <div class="meme-take btn mr-2" data-command="none"></div>\n                    </div>\n                </div>\n            </div>\n        ')},createMeme=(e,t,n)=>{if(null==t)return createNullMeme(e);let m=t.id,d=t.hash,a=t.liked,o=t.disliked,i=t.author,l=$(e),s="#"+d,c=`${noku.getAPIUrl().substring(0,noku.getAPIUrl().length-4)}home/${d}`;l.append(`\n            <div class="swiper-slide meme-container" id="${d}" data-memeid="${m}">\n                <div class="meme-op">\n                    <div class="float-left">\n                        <div class="op-pfp"></div>\n                        <div class="op-username"></div>\n                    </div>\n                    <div class="float-right">\n                        <div class="btn btn-black mr-2 my-auto" data-command="viewprofile" data-id="${i}">View Profile</div>\n                    </div>\n                </div>\n                <div class="meme-body swiper-zoom-container">\n                </div>\n                <div class="meme-footer">\n                    <div class="float-left">\n                        <div class="meme-like-count" id="count-${m}"></div>\n                        <div class="meme-give btn ml-1" data-command="like" id="like-${m}"></div>\n                        <div class="meme-take btn" data-command="dislike" id="dislike-${m}"></div>\n                    </div>\n                    <div class="float-right">\n                        <div class="meme-repub btn mr-1" data-command="repub"></div>\n                        <button class="btn btn-clear meme-share mr-2" data-command="share" data-clipboard-text="${c}"></button>\n                        <div class="meme-comment btn mr-2" data-command="comment"></div>\n                    </div>\n                </div>\n            </div>\n        `),$(`#${d} .meme-share`).on("click",e=>{"browser"===device.platform?alert("Url Copied"):(cordova.plugins.clipboard.copy(c),window.plugins.toast.showWithOptions({message:"Copied URL",duration:"short",position:"bottom",addPixelsY:-40}))}),a&&($(`#like-${m}`).removeClass("meme-give"),$(`#like-${m}`).addClass("meme-given")),o&&($(`#dislike-${m}`).removeClass("meme-take"),$(`#dislike-${m}`).addClass("meme-taken")),"browser"===device.platform||$(`${s} .meme-container`).addClass("center-vertical"),$(".btn").on("click",e=>{handleClick(e)});let r=noku.getCDNUrl(),v=t.author;noku.getUserData(v,e=>{let t=e.pfp;$(`${s} .op-pfp`).html(`<img class="pfp-image" src="${r}${t}" alt=""/>`),$(".page-title").html(`By: ${e.username}`);let n=$(`${s} .op-username`);n.html(e.username),n.css("color",`#${e.color}`)}),loadMemeContent(t),$(`${s} .meme-like-count`).html(t.likes-t.dislikes)},loadMemeContent=e=>{if(e.loaded)return;e.loaded=!0;let t=`#${e.hash}`,n=noku.getCDNUrl(),m=e.mime_type;null!=m&&(m.includes("image")&&$(`${t} .meme-body`).html(`<img class="meme-image swiper-zoom-target" src="${n}${e.hash}" />`),m.includes("embed")&&noku.getContent(`${n}${e.hash}`,(n,m)=>{m&&("browser"===device.platform?$(`${t} .meme-body`).html(n.data):$(`${t} .meme-body`).html(`<iframe class="meme-embed" src="${noku.getCDNUrl()}${e.hash}" onload="resizeIframe(this)" />`))}),m.includes("video")&&($(`${t} .meme-body`).html(`<video class="meme-image meme-video swiper-zoom-target" muted loop><source src="${n}${e.hash}" type="${m}"/></video><div class="mute-control btn" data-command="mute"></div>`),$(`${t} .mute-control`).click(()=>{toggleMute(t)})),m.includes("audio")&&($(`${t} .meme-body`).html(`<audio class="meme-image meme-audio" controls><source src="${n}${e.hash}" type="${m}"/></audio>`),$(`${t} .mute-control`).click(()=>{toggleMute(t)})),$(`${t} .meme-image`).one("load",()=>{}),$(`${t} .meme-video`).on("load",()=>{focus&&($(`${t} video`)[0].autoplay=!0),play_media(e)}))};